@model TransCanada.Models.ProductSubservice

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>@TempData["Product_service"].ToString()->Update Panel</h2>
        @{
            TempData.Keep("Product_service");
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        @*<div class="form-group">
            @Html.LabelFor(model => model.Lab_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Lab_name, TransCanada.Controllers.StaticValuesController.Lablist(), "--SELECT--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Lab_name, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @Html.HiddenFor(model => model.Product_service_grp_id, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            @Html.LabelFor(model => model.Lab_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Lab_name, TransCanada.Controllers.StaticValuesController.Lablist(), new { @class = "form-control listbox", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Lab_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lab_services_description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lab_services_description, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lab_services_description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lab_services_ext_description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lab_services_ext_description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lab_services_ext_description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.service_charges, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.service_charges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.service_charges, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.client_billing_charges, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.client_billing_charges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.client_billing_charges, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Specimen_Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Specimen_Type, TransCanada.Controllers.StaticValuesController.ListSpecimenType(), "--SELECT--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Specimen_Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Drugs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Drugs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Drugs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Medical_Review_Office_Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Medical_Review_Office_Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Medical_Review_Office_Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vendor_management, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vendor_management, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vendor_management, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document_Upload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Document_Upload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document_Upload, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Billing_Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Billing_Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Billing_Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Collection_Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Collection_Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Collection_Cost, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "UpdateServiceType", new { id = Model.Product_service_grp_id })
</div>